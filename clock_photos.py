# -*- coding: utf-8 -*-
"""CLOCK_photos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o47YAgNLiLM1HTEVc3F7onPqTWdP5jIW
"""

# run if not installed
!pip install google-auth google-auth-oauthlib google-auth-httplib2 requests

import os
import google_auth_oauthlib.flow
import googleapiclient.discovery
import google.auth.transport.requests

class GooglePhotos:
    def __init__(self, client_secrets_file):
        self.client_secrets_file = client_secrets_file
        self.service = self.authenticate()

    def authenticate(self):
        flow = google_auth_oauthlib.flow.InstalledAppFlow.from_client_secrets_file(
            self.client_secrets_file,
            scopes=['https://www.googleapis.com/auth/photoslibrary.readonly']
        )
        credentials = flow.run_local_server(port=0)
        return googleapiclient.discovery.build('photoslibrary', 'v1', credentials=credentials)

    def fetch_album_photos(self, album_id):
        """Fetch photos from a specified album."""
        results = self.service.albums().get(albumId=album_id).execute()
        photos = results.get('mediaItems', [])
        return photos

    def download_photo(self, photo_url, filename):
        """Download a photo from the given URL."""
        import requests
        response = requests.get(photo_url)
        if response.status_code == 200:
            with open(filename, 'wb') as f:
                f.write(response.content)
            print(f"Downloaded: {filename}")
        else:
            print("Failed to download the photo.")

class PhotoAlbum:
    def __init__(self, google_photos, album_id):
        self.google_photos = google_photos
        self.album_id = album_id

    def download_all_photos(self):
        """Download all photos in the album."""
        photos = self.google_photos.fetch_album_photos(self.album_id)
        for photo in photos:
            photo_url = photo['baseUrl'] + "=w2048-h1024"  # Adjust the size as needed
            filename = photo['id'] + ".jpg"  # You can customize the filename
            self.google_photos.download_photo(photo_url, filename)

if __name__ == "__main__":
    CLIENT_SECRETS_FILE = "client_secrets.json"  # Replace with your credentials file
    ALBUM_ID = "7th dimension"  # Replace with your album ID

    google_photos = GooglePhotos(CLIENT_SECRETS_FILE)
    album = PhotoAlbum(google_photos, ALBUM_ID)
    album.download_all_photos()

